<?xml version="1.0"?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/> 
  											

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="world_name" value="industrial_shop_floor.world"/>
  </include>

  <!-- controller launch file -->

  <include file="$(find agv_control)/launch/agv_base_controller.launch"/>

<!--  <include file="$(find agv_control)/launch/joint_state_controller.launch"/> -->

  <!-- urdf xml robot description loaded on the Parameter Server-->
  <param name="robot_description" command="$(find xacro)/xacro '$(find agv_low)/robots/agv_urdf_youbot_collsionwheel.xacro'" /> 


  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <!-- start robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen" >
    <param name="publish_frequency" type="double" value="50.0" />
  </node>


  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -x 4.5 -y -1.5  -model agv -param robot_description"/> 
	<!-- rviz file launch -->
  <!-- <node type="rviz" name="agv_rviz" pkg="rviz" args ="-d $(find agv_low)/rviz/agv.rviz" /> -->


</launch>
